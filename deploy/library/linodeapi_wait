#!/usr/bin/env python
# -*- coding: utf-8 -*-

# (c) 2013, akerl
# Written by akerl

from linode.api import Api, ApiError
from time import sleep


def main():
    module = AnsibleModule(
        argument_spec=dict(
            linodeid=dict(required=True),
        ),
        required_together=[['username', 'password']],
        required_one_of=[['username', 'apikey']],
        mutually_exclusive=[['apikey', 'password']],
        check_invalid_arguments=False,
    )
    params = module.params
    if 'apikey' in params:
        try:
            myApi = Api(params['apikey'])
        except ApiError:
            module.fail_json(msg='api key not accepted')
    else:
        myApi = Api()
        try:
            myApi.user_getapikey(
                username=params['username'],
                password=params['password']
            )
        except ApiError:
            module.fail_json(msg='credentials not accepted')

    while True:
        myResult = myApi.linode_job_list(linodeid=params['linodeid'])
        active_jobs = [x for x in myResult if x['HOST_FINISH_DT'] == '']
        if not len(active_jobs):
            break
        sleep(2)

    module.exit_json(changed=False, msg='all jobs processed')

# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>

main()

